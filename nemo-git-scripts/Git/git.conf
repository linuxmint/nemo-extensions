# git.conf
#

DEBUG="N" ; [ "$DEBUG" = "Y" ] && set -x # enable / disable debug (can be found at ~/.xsession-errors)

GIT="$(which git)"
GIT_OPTS=""
ZENITY="$(which zenity)"
ZENITY_OPTS=""

ZENITY_NAME="Git : $(basename "$0")"
ZENITY_WINDOW_ICON="$HOME/.gnome2/nautilus-scripts/Git/git.png"

OUTPUT="/tmp/$(basename "$0").$$"

_pynotify() {

env "ARGV=$1" $(which python) << EOT
import os
import pygtk
import pynotify
import sys
argv = os.environ['ARGV']
if __name__ == '__main__':
  if not pynotify.init("Basics"):
    sys.exit(1)
  n = pynotify.Notification("Git", argv)
  if not n.show():
    sys.exit(1)
EOT

}

_zenity_entry_text() {

$ZENITY $ZENITY_OPTS --name "$ZENITY_NAME" --title "$ZENITY_NAME" --window-icon "$ZENITY_WINDOW_ICON" --width "600" \
  --entry --text "$@"

}

_zenity_error_text() {

$ZENITY $ZENITY_OPTS --name "$ZENITY_NAME" --title "$ZENITY_NAME" --window-icon "$ZENITY_WINDOW_ICON" \
  --error --text "$@"

}

_zenity_info() {

RETVAL="$1"
OK_NO_OUTPUT="$2"
KO_NO_OUTPUT="$3"

if [ -s "$OUTPUT" ]; then
  $ZENITY $ZENITY_OPTS --name "$ZENITY_NAME" --title "$ZENITY_NAME" --window-icon "$ZENITY_WINDOW_ICON" --width "600" --height "400" \
  --text-info --filename "$OUTPUT"
else
  if [ "$RETVAL" -eq 0 ]; then
    _pynotify "$OK_NO_OUTPUT"
  else
    $ZENITY $ZENITY_OPTS --name "$ZENITY_NAME" --title "$ZENITY_NAME" --window-icon "$ZENITY_WINDOW_ICON" \
    --error --text "$KO_NO_OUTPUT"
  fi
fi

rm -f "$OUTPUT"

}

if [ ! -x "$GIT" ]; then
  _pynotify "$GIT was NOT found"
  exit 1
fi

if [ ! -x "$ZENITY" ]; then
  _pynotify "$ZENITY was NOT found"
  exit 1
fi

